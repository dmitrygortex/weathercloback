#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

echo "üöÄ Starting deployment..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo "‚ùå .env file not found! Please create it from .env.example"
    exit 1
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
#export $(cat .env | xargs)


# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë Stopping old containers..."
docker compose down

# –°–±–æ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo "üî® Building new images..."
docker compose build

# –ó–∞–ø—É—Å–∫ PostgreSQL –∏ MinIO
echo "üóÑÔ∏è Starting PostgreSQL and MinIO..."
docker compose up -d postgres minio

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
echo "‚è≥ Waiting for PostgreSQL to be ready..."
until docker compose exec -T postgres pg_isready -U postgres
do
    echo "Waiting for PostgreSQL..."
    sleep 2
done

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
echo "üîÑ Applying database migrations..."
docker compose run --rm api dotnet ef database update

# –°–æ–∑–¥–∞–Ω–∏–µ bucket –≤ MinIO
echo "üì¶ Creating MinIO bucket..."
docker compose exec minio mc alias set myminio http://localhost:9000 minioadmin minioadmin
docker compose exec minio mc mb myminio/clothing-images --ignore-existing
docker compose exec minio mc anonymous set public myminio/clothing-images

# –ó–∞–ø—É—Å–∫ API
echo "üöÄ Starting API..."
docker compose up -d api

echo "‚úÖ Deployment completed!"
echo "üìç API is available at: http://localhost:5001"
echo "üìç MinIO console: http://localhost:9001"
echo "üìç Swagger: http://localhost:5001/swagger"
